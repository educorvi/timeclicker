name: Build Docker

on:
    workflow_dispatch:
    workflow_call:
    pull_request:
      branches: [ main, develop ]
#    schedule:
#        - cron: '12 22 * * 1,2,3,4,5'

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: educorvi/timeclicker

permissions:
    packages: write

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ github.ref_name }}
            - name: Get Versions
              run: '.github/exportVersions.sh server/package.json'
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  flavor: |
                      latest=false
                  tags: |
                      type=semver,pattern={{version}},value=${{env.TIMECLICKER_VERSION}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                      type=semver,pattern={{major}}.{{minor}},value=${{env.TIMECLICKER_VERSION}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                      type=semver,pattern={{major}}-latest,value=${{env.TIMECLICKER_VERSION}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                      type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                      type=raw,value=develop,enable={{is_default_branch}}

            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  context: .
                  #          platforms: linux/amd64,linux/arm64
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
